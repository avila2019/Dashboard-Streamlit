import pandas as pd
import plotly.express as px
import streamlit as st

# Carregar CSV
df = pd.read_csv("Crianca_telefone.csv")

st.title("üìä Conjunto de dados sobre o impacto do uso de smartphones e do v√≠cio em adolescentes")

st.write("### Pr√©via dos Dados do Dataset")
st.dataframe(df.head())

st.write("### Distribui√ß√£o do Uso de Smartphones pelas Idades")
# Histograma da Idade 
if "Age" in df.columns:
    fig1 = px.histogram(
        df,
        x="Age",
        nbins=10,
        color="Gender",  # cor por g√™nero
        barmode="overlay",
        #title="Distribui√ß√£o do Uso de Smartphones pelas Idades"
    )
    fig1.update_layout(
        xaxis_title="Idade",
        yaxis_title="Quantidade",
        bargap=0.2,
        plot_bgcolor="white"
    )
    st.plotly_chart(fig1, use_container_width=True)    

st.write("### Uso Di√°rio de horas no Smartphone pelo G√™nero")
#  Gr√°fico 2: Uso de telefone por g√™nero
if "Gender" in df.columns and "Daily_Usage_Hours" in df.columns:
    fig2 = px.box(
        df,
        x="Gender",
        y="Daily_Usage_Hours",
        color="Gender",  # cores diferentes por g√™nero
        points="all",  # mostra os pontos individuais al√©m da caixa
        #title="Uso Di√°rio de horas no Smartphone pelo G√™nero"
    )
    fig2.update_layout(
        xaxis_title="G√™nero",
        yaxis_title="Horas de Uso Di√°rio pelo G√™nero",
        plot_bgcolor="white",
        showlegend=False
    )
    st.plotly_chart(fig2, use_container_width=True)

st.write("### Idade x Tempo de Uso do Telefone")
# --- Gr√°fico 3: Dispers√£o entre idade e tempo de uso do telefone ---
if "Age" in df.columns and "Daily_Usage_Hours" in df.columns:
    fig3 = px.scatter(
        df,
        x="Age",
        y="Daily_Usage_Hours",
        color="Gender" if "Gender" in df.columns else None,  # cor por g√™nero, se existir
        size="Daily_Usage_Hours",  # bolha proporcional ao tempo de uso
        hover_data=df.columns,  # mostra todas as colunas no hover
        #title="Idade x Tempo de Uso do Telefone",
        trendline="ols",  # adiciona linha de regress√£o (se statsmodels estiver instalado)
        opacity=0.7
    )
    fig3.update_layout(
        xaxis_title="Idade",
        yaxis_title="Horas de Uso Di√°rio do Telefone",
        plot_bgcolor="white",
        legend_title="G√™nero"
    )
    st.plotly_chart(fig3, use_container_width=True)    


    st.write("### Rela√ß√£o entre Horas de Uso Di√°rio do Telefone e Horas de Sono")
    # Gr√°fico de dispers√£o: Horas de uso do telefone vs Horas de sono
if "Daily_Usage_Hours" in df.columns and "Daily_Usage_Hours" in df.columns:
    fig4 = px.scatter(
        df,
        x="Daily_Usage_Hours",
        y="Sleep_Hours",
        color=None,
        size="Daily_Usage_Hours",
        trendline="ols",  # Adiciona linha de tend√™ncia
        #title="Rela√ß√£o entre Horas de Uso Di√°rio do Telefone e Horas de Sono",
        labels={"Daily_Usage_Hours": "Horas de Uso Di√°rio do Telefone", "Sleep_Hours": "Horas de Sono"}
    )
    st.plotly_chart(fig4)

st.write("### An√°lise das crian√ßas que utilizam Smartphones, Rela√ß√£o ao N√≠vel de Ansiedade, Controle Parental,Autoestima e N√≠vel de Depress√£o")
# Indicadores Psicol√≥gicos das Crian√ßas
# Selecionando uma crian√ßa para an√°lise individual
opcao = st.selectbox("Selecione uma crian√ßa para visualizar:", df.index)
# COLOCAR O NOME DA CRIAN√áA 

# Pegar valores dessa linha
dados = df.loc[opcao, ["Anxiety_Level", "Depression_Level", "Self_Esteem", "Parental_Control"]]

# Criar DataFrame no formato longo para o radar
radar_df = pd.DataFrame({
    "Indicador": ["N√≠vel de Ansiedade", "N√≠vel de Depress√£o", "Autoestima", "Controle Parental"],
    "Valor": dados.values
})

# Gr√°fico radar por nivel de ansiedade , controle parental, autoestima e n√≠vel de depress√£o
fig4 = px.line_polar(
    radar_df,
    r="Valor",
    theta="Indicador",
    line_close=True,
    title=f"Perfil Psicol√≥gico da Crian√ßa {opcao}",
)
fig4.update_traces(fill="toself")

st.plotly_chart(fig4)    